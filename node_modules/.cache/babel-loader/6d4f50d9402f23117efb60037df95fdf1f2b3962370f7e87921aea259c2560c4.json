{"ast":null,"code":"import _URLSearchParams from \"@babel/runtime-corejs3/core-js-stable/url-search-params\";\nimport React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/react';\nimport Header from './components/Header';\nimport PdfPreview from './components/PdfPreview';\nimport SettingsPanel from './components/SettingsPanel';\nimport confluenceApi from './api/confluence';\n\n// 기본 PDF 설정\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultSettings = {\n  margin: {\n    top: 20,\n    right: 20,\n    bottom: 20,\n    left: 20\n  },\n  fontSize: {\n    title: 18,\n    heading1: 16,\n    heading2: 14,\n    body: 12\n  },\n  fontFamily: 'Arial',\n  header: {\n    show: true,\n    text: '',\n    align: 'center'\n  },\n  footer: {\n    show: true,\n    text: '',\n    showPageNumber: true,\n    align: 'center'\n  }\n};\nconst App = () => {\n  const [pageId, setPageId] = useState(null);\n  const [pageTitle, setPageTitle] = useState('');\n  const [pageContent, setPageContent] = useState('');\n  const [settings, setSettings] = useState(defaultSettings);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // URL에서 pageId 파라미터 가져오기\n  useEffect(() => {\n    const params = new _URLSearchParams(window.location.search);\n    const pageIdParam = params.get('pageId');\n    if (pageIdParam) {\n      setPageId(pageIdParam);\n    } else {\n      setError('페이지 ID가 제공되지 않았습니다.');\n    }\n  }, []);\n\n  // 페이지 콘텐츠 가져오기\n  useEffect(() => {\n    if (!pageId) return;\n    const fetchPageContent = async () => {\n      try {\n        setLoading(true);\n        const pageData = await confluenceApi.getPageContent(pageId);\n        const htmlContent = await confluenceApi.getPageHtmlContent(pageId);\n        setPageTitle(pageData.title);\n        setPageContent(htmlContent);\n\n        // 헤더/푸터 기본값 설정\n        setSettings(prev => ({\n          ...prev,\n          header: {\n            ...prev.header,\n            text: pageData.title\n          },\n          footer: {\n            ...prev.footer,\n            text: `Generated from Confluence - ${new Date().toLocaleDateString()}`\n          }\n        }));\n      } catch (err) {\n        console.error('페이지 콘텐츠 가져오기 오류:', err);\n        setError('페이지 콘텐츠를 가져오는데 실패했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPageContent();\n  }, [pageId]);\n\n  // 설정 변경 핸들러\n  const handleSettingsChange = newSettings => {\n    setSettings({\n      ...settings,\n      ...newSettings\n    });\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    css: appStyles,\n    children: [/*#__PURE__*/_jsx(Header, {\n      title: \"A4 PDF Export\"\n    }), error && /*#__PURE__*/_jsx(\"div\", {\n      css: errorStyles,\n      children: error\n    }), loading ? /*#__PURE__*/_jsx(\"div\", {\n      css: loadingStyles,\n      children: \"\\uCF58\\uD150\\uCE20\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }) : /*#__PURE__*/_jsxs(\"div\", {\n      css: contentStyles,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        css: previewContainerStyles,\n        children: /*#__PURE__*/_jsx(PdfPreview, {\n          title: pageTitle,\n          content: pageContent,\n          settings: settings\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        css: settingsPanelStyles,\n        children: /*#__PURE__*/_jsx(SettingsPanel, {\n          settings: settings,\n          onSettingsChange: handleSettingsChange\n        })\n      })]\n    })]\n  });\n};\n\n// 스타일\nconst appStyles = css`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n`;\nconst contentStyles = css`\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n`;\nconst previewContainerStyles = css`\n  flex: 1;\n  padding: 20px;\n  overflow: auto;\n  background-color: #f4f5f7;\n`;\nconst settingsPanelStyles = css`\n  width: 300px;\n  background-color: #ffffff;\n  border-left: 1px solid #dfe1e6;\n  overflow-y: auto;\n`;\nconst loadingStyles = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n  font-size: 16px;\n`;\nconst errorStyles = css`\n  padding: 16px;\n  background-color: #ffebe6;\n  color: #de350b;\n  border-radius: 3px;\n  margin: 16px;\n`;\nexport default App;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}