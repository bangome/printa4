{"ast":null,"code":"import jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { applyStyles } from './styleProcessor';\n\n// A4 크기 상수 (mm)\nconst A4_WIDTH_MM = 210;\nconst A4_HEIGHT_MM = 297;\n\n// A4 크기 (pt, jsPDF 기본 단위)\nconst A4_WIDTH_PT = 595.28;\nconst A4_HEIGHT_PT = 841.89;\n\n/**\r\n * PDF 생성 서비스\r\n */\nclass PdfGenerator {\n  /**\r\n   * HTML 콘텐츠를 A4 PDF로 변환\r\n   * @param {string} title - 문서 제목\r\n   * @param {string} htmlContent - HTML 콘텐츠\r\n   * @param {Object} settings - PDF 설정\r\n   * @returns {Promise<Blob>} - PDF Blob\r\n   */\n  async generatePdf(title, htmlContent, settings) {\n    // HTML 요소 생성\n    const container = document.createElement('div');\n    container.style.position = 'absolute';\n    container.style.left = '-9999px';\n    container.style.width = `${A4_WIDTH_PT}px`;\n    container.style.fontFamily = settings.fontFamily;\n    document.body.appendChild(container);\n    try {\n      // 제목 추가\n      const titleElement = document.createElement('h1');\n      titleElement.textContent = title;\n      titleElement.style.fontSize = `${settings.fontSize.title}px`;\n      titleElement.style.fontFamily = settings.fontFamily;\n      titleElement.style.marginBottom = '20px';\n      container.appendChild(titleElement);\n\n      // 본문 콘텐츠 추가\n      const contentElement = document.createElement('div');\n      contentElement.innerHTML = htmlContent;\n\n      // 스타일 적용\n      applyStyles(contentElement, settings);\n      container.appendChild(contentElement);\n\n      // 콘텐츠 높이를 기준으로 페이지 분할\n      const contentHeight = container.offsetHeight;\n      const contentWidth = container.offsetWidth;\n\n      // 여백을 고려한 jsPDF 설정 (mm 단위)\n      const marginLeft = settings.margin.left * 0.352778; // px to mm\n      const marginTop = settings.margin.top * 0.352778;\n      const marginRight = settings.margin.right * 0.352778;\n      const marginBottom = settings.margin.bottom * 0.352778;\n\n      // 사용 가능한 콘텐츠 영역 (mm)\n      const availableWidth = A4_WIDTH_MM - marginLeft - marginRight;\n      const availableHeight = A4_HEIGHT_MM - marginTop - marginBottom;\n      const headerHeight = settings.header.show ? 15 : 0;\n      const footerHeight = settings.footer.show ? 15 : 0;\n      const actualAvailableHeight = availableHeight - headerHeight - footerHeight;\n\n      // PDF 생성\n      const pdf = new jsPDF({\n        orientation: 'portrait',\n        unit: 'mm',\n        format: 'a4'\n      });\n\n      // HTML을 캔버스로 변환\n      const canvas = await html2canvas(container, {\n        scale: 2,\n        // 고해상도를 위한 스케일 조정\n        useCORS: true,\n        allowTaint: true,\n        scrollY: -window.scrollY\n      });\n\n      // 캔버스를 이미지로 변환\n      const imgData = canvas.toDataURL('image/png');\n\n      // 총 페이지 수 계산\n      const totalPages = Math.ceil(contentHeight / (actualAvailableHeight * 2.83)); // mm to px\n\n      // 각 페이지에 이미지 추가\n      for (let i = 0; i < totalPages; i++) {\n        if (i > 0) {\n          pdf.addPage();\n        }\n\n        // 컨텐츠 영역 계산\n        const sourceY = i * (actualAvailableHeight * 2.83);\n        const sourceHeight = Math.min(actualAvailableHeight * 2.83, contentHeight - sourceY);\n\n        // 이미지 추가\n        pdf.addImage(imgData, 'PNG', marginLeft, marginTop + headerHeight, availableWidth, sourceHeight / contentHeight * availableWidth * (contentHeight / contentWidth), '', 'FAST');\n\n        // 헤더 추가\n        if (settings.header.show) {\n          pdf.setFont(settings.fontFamily);\n          pdf.setFontSize(9);\n          pdf.setTextColor(100, 100, 100);\n          const headerText = settings.header.text;\n          const headerWidth = pdf.getStringUnitWidth(headerText) * 9 / pdf.internal.scaleFactor;\n          let headerX = marginLeft;\n          if (settings.header.align === 'center') {\n            headerX = marginLeft + (availableWidth - headerWidth) / 2;\n          } else if (settings.header.align === 'right') {\n            headerX = A4_WIDTH_MM - marginRight - headerWidth;\n          }\n          pdf.text(headerText, headerX, marginTop + 7);\n          pdf.line(marginLeft, marginTop + 10, A4_WIDTH_MM - marginRight, marginTop + 10);\n        }\n\n        // 푸터 추가\n        if (settings.footer.show) {\n          pdf.setFont(settings.fontFamily);\n          pdf.setFontSize(9);\n          pdf.setTextColor(100, 100, 100);\n          const footerText = settings.footer.text;\n          const footerWidth = pdf.getStringUnitWidth(footerText) * 9 / pdf.internal.scaleFactor;\n          let footerX = marginLeft;\n          if (settings.footer.align === 'center') {\n            footerX = marginLeft + (availableWidth - footerWidth) / 2;\n          } else if (settings.footer.align === 'right') {\n            footerX = A4_WIDTH_MM - marginRight - footerWidth;\n          }\n          pdf.text(footerText, footerX, A4_HEIGHT_MM - marginBottom - 7);\n\n          // 페이지 번호 추가\n          if (settings.footer.showPageNumber) {\n            const pageNumberText = `${i + 1} / ${totalPages}`;\n            pdf.text(pageNumberText, A4_WIDTH_MM - marginRight - 20, A4_HEIGHT_MM - marginBottom - 7);\n          }\n          pdf.line(marginLeft, A4_HEIGHT_MM - marginBottom - 10, A4_WIDTH_MM - marginRight, A4_HEIGHT_MM - marginBottom - 10);\n        }\n      }\n\n      // PDF 파일명 설정\n      const fileName = `${title.replace(/[^a-zA-Z0-9]/g, '_')}_A4.pdf`;\n\n      // PDF 다운로드\n      pdf.save(fileName);\n      return pdf.output('blob');\n    } finally {\n      // 임시 요소 제거\n      document.body.removeChild(container);\n    }\n  }\n}\nexport default new PdfGenerator();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}