{"ast":null,"code":"/**\r\n * Confluence API 래퍼\r\n */\nclass ConfluenceApi {\n  constructor() {\n    this.baseUrl = '/api';\n  }\n\n  /**\r\n   * 현재 컨텍스트 정보 가져오기\r\n   */\n  async getContext() {\n    const response = await fetch(`${this.baseUrl}/context`);\n    if (!response.ok) {\n      throw new Error('컨텍스트 정보를 가져오는데 실패했습니다.');\n    }\n    return response.json();\n  }\n\n  /**\r\n   * 페이지 콘텐츠 가져오기\r\n   * @param {string} pageId - 가져올 페이지 ID\r\n   */\n  async getPageContent(pageId) {\n    const response = await fetch(`${this.baseUrl}/page/${pageId}`);\n    if (!response.ok) {\n      throw new Error('페이지 콘텐츠를 가져오는데 실패했습니다.');\n    }\n    return response.json();\n  }\n\n  /**\r\n   * 페이지 HTML 콘텐츠 가져오기\r\n   * @param {string} pageId - 가져올 페이지 ID\r\n   */\n  async getPageHtmlContent(pageId) {\n    const response = await fetch(`${this.baseUrl}/page/${pageId}/html`);\n    if (!response.ok) {\n      throw new Error('페이지 HTML 콘텐츠를 가져오는데 실패했습니다.');\n    }\n    return response.text();\n  }\n\n  /**\r\n   * 페이지 첨부 파일 가져오기\r\n   * @param {string} pageId - 페이지 ID\r\n   */\n  async getPageAttachments(pageId) {\n    const response = await fetch(`${this.baseUrl}/page/${pageId}/attachments`);\n    if (!response.ok) {\n      throw new Error('페이지 첨부 파일을 가져오는데 실패했습니다.');\n    }\n    return response.json();\n  }\n}\nexport default new ConfluenceApi();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}